program => ( num )* EOF
num => digit+ ( "." DIGIT+ )? | string
string => """ <any character or escpaed char>* """ | ident
ident => ALPHA <except _>+ (ALPHA | DIGIT)*
un_op => ( "!" | neg | dup | pop ) | num
bin_op => ( "+" | "-" | "/" | "%" | "*" | "^" | ">>" | "<<" | "|" | "&" | nip | swap ) | un_op

func =>  "(" args? ") | obj
obj => "{" args? "}" | enum
enum => "#" args? "#" | array
array => [ top? ( "," top)* ] | lambda

triple => ( rot | hack ) | as_op
as_op => ( let | pub | once | const | trait ) | bin_op
bin_op => ( "+" | "-" | "/" | "%" | "*" | "^" | ">>" | "<<" | "|" | "&" | "&&" | "||" | "==" | "!=" | nip | swap ) | un_op
un_op => ( "!" | neg | dup | pop ) | num

ident => ALPHA <except _>+ (ALPHA | DIGIT)*
